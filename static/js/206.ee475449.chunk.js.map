{"version":3,"file":"static/js/206.ee475449.chunk.js","mappings":"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","sources":["components/api/api.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Trailer.module.css?80d5","pages/Movies/Trailer.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst KEY_API = '034807affda3ec91f179dd3de3e4274d';\n\nconst getTrendingMovies = async () => {\n  try {\n    const response = await axios.get('/trending/all/day', {\n      params: {\n        api_key: KEY_API,\n        language: 'en-US',\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nconst searchMovies = async keyword => {\n  try {\n    const response = await axios.get('/search/movie', {\n      params: {\n        api_key: KEY_API,\n        language: 'en-US',\n        query: keyword,\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\n\nconst fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, {\n      params: {\n        api_key: KEY_API,\n        language: 'en-US',\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nconst fetchCredits = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY_API}&language=en-US`;\n\n  try {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n      },\n    };\n\n    const response = await fetch(url, options);\n    const data = await response.json();\n\n    return data.cast;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchReviews = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY_API}&language=en-US`;\n\n  try {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n      },\n    };\n\n    const response = await fetch(url, options);\n    const data = await response.json();\n\n    return data.results || [];\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMovieVideos = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/videos`, {\n      params: {\n        api_key: KEY_API,\n        language: 'en-US',\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie videos:', error);\n    throw error;\n  }\n};\n\nexport {\n  getTrendingMovies,\n  searchMovies,\n  fetchMovieDetails,\n  fetchCredits,\n  fetchReviews,\n  fetchMovieVideos,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"trailer\":\"Trailer_trailer__TDq4z\",\"trailerFrame\":\"Trailer_trailerFrame__m-Ywr\",\"noTrailerText\":\"Trailer_noTrailerText__i2YZI\"};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieVideos } from '../../components/api/api';\nimport styles from './Trailer.module.css';\n\nconst Trailer = () => {\n  const { movieId } = useParams();\n  const [trailer, setTrailer] = useState(null);\n\n  useEffect(() => {\n    const fetchTrailer = async () => {\n      try {\n        const videos = await fetchMovieVideos(movieId);\n        const trailer = videos.results.find(video => video.type === 'Trailer');\n        setTrailer(trailer);\n      } catch (error) {\n        console.error('Error fetching trailer:', error);\n      }\n    };\n\n    fetchTrailer();\n  }, [movieId]);\n\n  return (\n    <div className={styles.trailer}>\n      {trailer ? (\n        <div>\n          <iframe\n            src={`https://www.youtube.com/embed/${trailer.key}`}\n            title={trailer.name}\n            frameBorder=\"0\"\n            allowFullScreen\n            className={styles.trailerFrame}\n          ></iframe>\n        </div>\n      ) : (\n        <p className={styles.noTrailerText}>No trailer available</p>\n      )}\n    </div>\n  );\n};\n\nexport default Trailer;\n"],"names":["axios","KEY_API","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","params","api_key","language","sent","abrupt","data","t0","console","error","stop","apply","arguments","searchMovies","_ref2","_callee2","keyword","_context2","query","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","concat","_x2","fetchCredits","_ref4","_callee4","url","options","_context4","method","headers","accept","fetch","json","cast","_x3","fetchReviews","_ref5","_callee5","_context5","results","_x4","fetchMovieVideos","_ref6","_callee6","_context6","_x5","useParams","_useState","useState","_useState2","_slicedToArray","trailer","setTrailer","useEffect","fetchTrailer","videos","_trailer","find","video","type","_jsx","className","styles","children","src","key","title","name","frameBorder","allowFullScreen"],"sourceRoot":""}