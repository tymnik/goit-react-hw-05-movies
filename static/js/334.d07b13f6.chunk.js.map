{"version":3,"file":"static/js/334.d07b13f6.chunk.js","mappings":"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","sources":["components/api/api.jsx","webpack://goit-react-hw-05-movies/./src/components/CastItem/CastItem.module.css?d4dc","components/CastItem/CastItem.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Cast.module.css?0749","pages/Movies/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst KEY_API = '034807affda3ec91f179dd3de3e4274d';\n\nconst getTrendingMovies = async () => {\n  try {\n    const response = await axios.get('/trending/all/day', {\n      params: {\n        api_key: KEY_API,\n        language: 'en-US',\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nconst searchMovies = async keyword => {\n  try {\n    const response = await axios.get('/search/movie', {\n      params: {\n        api_key: KEY_API,\n        language: 'en-US',\n        query: keyword,\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Error searching movies:', error);\n    throw error;\n  }\n};\n\n\nconst fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, {\n      params: {\n        api_key: KEY_API,\n        language: 'en-US',\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nconst fetchCredits = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY_API}&language=en-US`;\n\n  try {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n      },\n    };\n\n    const response = await fetch(url, options);\n    const data = await response.json();\n\n    return data.cast;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchReviews = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY_API}&language=en-US`;\n\n  try {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n      },\n    };\n\n    const response = await fetch(url, options);\n    const data = await response.json();\n\n    return data.results || [];\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMovieVideos = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/videos`, {\n      params: {\n        api_key: KEY_API,\n        language: 'en-US',\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie videos:', error);\n    throw error;\n  }\n};\n\nexport {\n  getTrendingMovies,\n  searchMovies,\n  fetchMovieDetails,\n  fetchCredits,\n  fetchReviews,\n  fetchMovieVideos,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castCard\":\"CastItem_castCard__5mpkP\",\"castImg\":\"CastItem_castImg__6fxLg\",\"castText\":\"CastItem_castText__UEigQ\",\"castName\":\"CastItem_castName__VXgo9\",\"castCharacter\":\"CastItem_castCharacter__nD77Q\"};","import React from 'react';\nimport styles from './CastItem.module.css'\n\nconst defaultActorImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst CastItem = ({ actor }) => {\n  const imageUrl = actor.profile_path\n    ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n    : defaultActorImg;\n\n  return (\n    <li className={styles.castCard}>\n      <img src={imageUrl} alt={actor.name} className={styles.castImg} />\n      <div className={styles.castText}>\n        <h2 className={styles.castName}>{actor.name}</h2>\n        <p className={styles.castCharacter}>Character: {actor.character}</p>\n      </div>\n    </li>\n  );\n};\n\nexport default CastItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__3fPAg\",\"castList\":\"Cast_castList__DjIGo\"};","import React, { useEffect, useState } from 'react';\nimport CastItem from 'components/CastItem/CastItem';\nimport Loader from 'components/Loader/Loader';\nimport { useParams } from 'react-router-dom';\nimport styles from './Cast.module.css';\nimport { fetchCredits } from '../../components/api/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!movieId) return;\n\n      try {\n        const castData = await fetchCredits(movieId);\n        setCredits(castData);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return <p>Error fetching cast information: {error.message}</p>;\n  }\n\n  return (\n    <section className={styles.cast}>\n      <ul className={styles.castList}>\n        {credits.map(actor => (\n          <CastItem key={actor.id} actor={actor} />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","KEY_API","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","params","api_key","language","sent","abrupt","data","t0","console","error","stop","apply","arguments","searchMovies","_ref2","_callee2","keyword","_context2","query","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","concat","_x2","fetchCredits","_ref4","_callee4","url","options","_context4","method","headers","accept","fetch","json","cast","_x3","fetchReviews","_ref5","_callee5","_context5","results","_x4","fetchMovieVideos","_ref6","_callee6","_context6","_x5","actor","imageUrl","profile_path","_jsxs","className","styles","children","_jsx","src","alt","name","character","useParams","_useState","useState","_useState2","_slicedToArray","credits","setCredits","_useState3","_useState4","loading","setLoading","_useState5","_useState6","setError","useEffect","fetchData","castData","Loader","message","map","CastItem","id"],"sourceRoot":""}